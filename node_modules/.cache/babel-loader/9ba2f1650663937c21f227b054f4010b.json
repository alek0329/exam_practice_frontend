{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alek\\\\Dropbox\\\\Dev\\\\3.sem\\\\24h_exam\\\\24h_exam_frontend\\\\src\\\\components\\\\Login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Facade\n\nimport { facade } from \"../../apiFacade\"; // Styles\n\nimport { Wrapper, StyledFormWrapper, StyledForm, StyledInput, StyledButton, StyledError } from \"./Login.styles\"; // Urls\n// Router\n\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  username: \"\",\n  password: \"\"\n};\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setLoggedIn,\n    loginCredentials,\n    setLoginCredentials\n  } = _ref;\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n\n  const perfomLogin = e => {\n    e.preventDefault();\n    setError(\"\");\n\n    for (let key in loginCredentials) {\n      if (loginCredentials[key] === \"\") {\n        setError(`${key} skal være udfyldt`);\n        return;\n      }\n    }\n\n    login(loginCredentials.username, loginCredentials.password);\n  };\n\n  const onChange = e => {\n    setLoginCredentials({ ...loginCredentials,\n      [e.currentTarget.id]: e.currentTarget.value\n    });\n  };\n\n  const login = async (user, pass) => {\n    await facade.login(user, pass).then(res => {\n      setLoggedIn(facade.loggedIn());\n\n      if (facade.loggedIn()) {\n        navigate(\"/\");\n      } else {\n        setError(\"Invalid username or password\");\n        setLoginCredentials(initialState);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(StyledFormWrapper, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n          placeholder: \"User Name\",\n          id: \"username\",\n          onChange: onChange,\n          value: loginCredentials.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          placeholder: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          value: loginCredentials.password,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(StyledError, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: perfomLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"jUP0uAh7TVPiOgV113kAnfFQr/s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Alek/Dropbox/Dev/3.sem/24h_exam/24h_exam_frontend/src/components/Login/index.js"],"names":["React","useState","axios","facade","Wrapper","StyledFormWrapper","StyledForm","StyledInput","StyledButton","StyledError","useNavigate","initialState","username","password","Login","setLoggedIn","loginCredentials","setLoginCredentials","navigate","error","setError","perfomLogin","e","preventDefault","key","login","onChange","currentTarget","id","value","user","pass","then","res","loggedIn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Facade\r\nimport { facade } from \"../../apiFacade\";\r\n\r\n// Styles\r\nimport {\r\n  Wrapper,\r\n  StyledFormWrapper,\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledButton,\r\n  StyledError,\r\n} from \"./Login.styles\";\r\n\r\n// Urls\r\n\r\n// Router\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Login = ({\r\n  setLoggedIn,\r\n  loginCredentials,\r\n  setLoginCredentials,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const perfomLogin = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    for (let key in loginCredentials) {\r\n      if (loginCredentials[key] === \"\") {\r\n        setError(`${key} skal være udfyldt`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    login(loginCredentials.username, loginCredentials.password);\r\n  };\r\n  const onChange = (e) => {\r\n    setLoginCredentials({\r\n      ...loginCredentials,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  const login = async (user, pass) => {\r\n    await facade.login(user, pass).then((res) => {\r\n      setLoggedIn(facade.loggedIn());\r\n      if (facade.loggedIn()) {\r\n        navigate(\"/\");\r\n      } else {\r\n        setError(\"Invalid username or password\");\r\n        setLoginCredentials(initialState);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledFormWrapper>\r\n        <StyledForm>\r\n          <StyledInput\r\n            placeholder=\"User Name\"\r\n            id=\"username\"\r\n            onChange={onChange}\r\n            value={loginCredentials.username}\r\n          />\r\n          <StyledInput\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={loginCredentials.password}\r\n            onChange={onChange}\r\n          />\r\n          {error && (\r\n            <StyledError>\r\n              <p>{error}</p>\r\n            </StyledError>\r\n          )}\r\n          <StyledButton onClick={perfomLogin}>Login</StyledButton>\r\n        </StyledForm>\r\n      </StyledFormWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}